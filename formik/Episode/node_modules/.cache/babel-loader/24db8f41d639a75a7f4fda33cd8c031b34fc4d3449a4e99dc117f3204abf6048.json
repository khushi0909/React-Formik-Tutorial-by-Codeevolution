{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rawla\\\\Desktop\\\\my studies\\\\Project Practice\\\\ReactFormik tryagaincodeevolotion\\\\formik\\\\Episode5\\\\src\\\\Components\\\\YouTubeForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: 'khushboo',\n  email: '',\n  channel: ''\n};\nconst onSubmit = values => {\n  console.log(\"Form Values\", values);\n};\nconst validate = values => {\n  // values.name values.email values.channel\n  //errors.name errors.email errors.channel   \n  //error should be string incdicationg the error \n  //ex erros.name=\"this foeld is required\"\n  let errors = {};\n  if (!values.name) {\n    errors.name = 'Required';\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(values.email)) {\n    errors.email = \"Invalid Email Format\";\n  }\n  if (!values.channel) {\n    errors.channel = \"Required\";\n  }\n  return errors;\n};\nfunction YouTubeForm() {\n  _s();\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  console.log(\"values:\", formik.values);\n  console.log(\"Form erros\", formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: formik.handleChange,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"channel\",\n        children: \"Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"channel\",\n        name: \"channel\",\n        onChange: formik.handleChange,\n        value: formik.values.channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(YouTubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = YouTubeForm;\nexport default YouTubeForm;\nvar _c;\n$RefreshReg$(_c, \"YouTubeForm\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","initialValues","name","email","channel","onSubmit","values","console","log","validate","errors","test","YouTubeForm","_s","formik","children","handleSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","handleChange","value","_c","$RefreshReg$"],"sources":["C:/Users/rawla/Desktop/my studies/Project Practice/ReactFormik tryagaincodeevolotion/formik/Episode5/src/Components/YouTubeForm.js"],"sourcesContent":["import React from 'react'\r\nimport {useFormik} from 'formik'\r\n\r\n\r\nconst initialValues={\r\n    name:'khushboo',\r\n    email:'',\r\n    channel:''\r\n}\r\n\r\nconst onSubmit= values=>{\r\n    console.log(\"Form Values\",values)\r\n}\r\n\r\nconst validate= values =>{\r\n    // values.name values.email values.channel\r\n    //errors.name errors.email errors.channel   \r\n    //error should be string incdicationg the error \r\n    //ex erros.name=\"this foeld is required\"\r\n    let errors = {}\r\n\r\n    if(!values.name){\r\n        errors.name = 'Required'\r\n    }\r\n    if(!values.email){\r\n        errors.email = \"Required\"\r\n    }else if( /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(values.email)){\r\n\r\n        errors.email = \"Invalid Email Format\"\r\n    }\r\n    if(!values.channel){\r\n        errors.channel = \"Required\"\r\n    }\r\n\r\n    return errors\r\n}\r\n\r\nfunction YouTubeForm() {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    });\r\n    console.log(\"values:\", formik.values)\r\n    console.log(\"Form erros\",formik.errors)\r\n  return (\r\n    <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <label htmlFor='name'>Name</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" onChange={formik.handleChange} value={formik.values.name}/>\r\n\r\n            <label htmlFor = 'email'>Email</label>\r\n            <input type='email' name='email' id='email' onChange={formik.handleChange} value={formik.values.email}/>\r\n\r\n            <label htmlFor='channel'>Channel</label>\r\n            <input type=\"text\" id=\"channel\" name=\"channel\" onChange={formik.handleChange} value={formik.values.channel}/>\r\n\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default YouTubeForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
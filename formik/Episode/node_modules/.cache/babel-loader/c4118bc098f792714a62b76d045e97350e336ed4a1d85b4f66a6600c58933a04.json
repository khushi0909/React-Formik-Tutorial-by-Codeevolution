{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rawla\\\\Desktop\\\\my studies\\\\Project Practice\\\\ReactFormik tryagaincodeevolotion\\\\formik\\\\Episode6-7\\\\src\\\\Components\\\\YouTubeForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: 'khushboo',\n  email: '',\n  channel: ''\n};\nconst onSubmit = values => {\n  console.log(\"Form Values\", values);\n};\nconst validate = values => {\n  // values.name values.email values.channel\n  //errors.name errors.email errors.channel   \n  //error should be string incdicationg the error \n  //ex erros.name=\"this foeld is required\"\n  let errors = {};\n  if (!values.name) {\n    errors.name = 'Required';\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid Email Format\";\n  }\n  if (!values.channel) {\n    errors.channel = \"Required\";\n  }\n  return errors;\n};\nfunction YouTubeForm() {\n  _s();\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  });\n  console.log(\"values:\", formik.values);\n  console.log(\"Form erros\", formik.errors);\n  console.log(\"Form visited fields\", formik.touched);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: formik.handleChange,\n          value: formik.values.name,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 64\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), formik.touched.name && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 65\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channel\",\n          children: \"Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\",\n          onChange: formik.handleChange,\n          value: formik.values.channel,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), formik.touched.channel && formik.errors.channel ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 70\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(YouTubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = YouTubeForm;\nexport default YouTubeForm;\nvar _c;\n$RefreshReg$(_c, \"YouTubeForm\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","initialValues","name","email","channel","onSubmit","values","console","log","validate","errors","test","YouTubeForm","_s","formik","touched","children","handleSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","handleChange","value","onBlur","handleBlur","_c","$RefreshReg$"],"sources":["C:/Users/rawla/Desktop/my studies/Project Practice/ReactFormik tryagaincodeevolotion/formik/Episode6-7/src/Components/YouTubeForm.js"],"sourcesContent":["import React from 'react'\r\nimport {useFormik} from 'formik'\r\n\r\n\r\nconst initialValues={\r\n    name:'khushboo',\r\n    email:'',\r\n    channel:''\r\n}\r\n\r\nconst onSubmit= values=>{\r\n    console.log(\"Form Values\",values)\r\n}\r\n\r\nconst validate = values => {\r\n    // values.name values.email values.channel\r\n    //errors.name errors.email errors.channel   \r\n    //error should be string incdicationg the error \r\n    //ex erros.name=\"this foeld is required\"\r\n    let errors = {};\r\n\r\n    if(!values.name){\r\n        errors.name = 'Required'\r\n    }\r\n    if(!values.email){\r\n        errors.email = \"Required\"\r\n    }else if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){\r\n\r\n        errors.email = \"Invalid Email Format\"\r\n    }\r\n    if(!values.channel){\r\n        errors.channel = \"Required\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\n\r\nfunction YouTubeForm() {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    });\r\n    console.log(\"values:\", formik.values)\r\n    console.log(\"Form erros\",formik.errors)\r\n    console.log(\"Form visited fields\",formik.touched)\r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className='form-control'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input type=\"text\" id=\"name\" name=\"name\" onChange={formik.handleChange} value={formik.values.name} onBlur={formik.handleBlur}/>\r\n                    {formik.touched.name && formik.errors.name?<div className=\"error\">{formik.errors.name}</div>:null}\r\n            </div>\r\n            \r\n\r\n            <div className='form-control'>\r\n                    <label htmlFor = 'email'>Email</label>\r\n                    <input type='email' name='email' id='email' onChange={formik.handleChange} value={formik.values.email} onBlur={formik.handleBlur}/>\r\n                    {formik.touched.name && formik.errors.email?<div className=\"error\">{formik.errors.email}</div>:null}\r\n\r\n            </div>\r\n            \r\n\r\n            <div className='form-control'>\r\n                    <label htmlFor='channel'>Channel</label>\r\n                    <input type=\"text\" id=\"channel\" name=\"channel\" onChange={formik.handleChange} value={formik.values.channel} onBlur={formik.handleBlur}/>\r\n                    {formik.touched.channel && formik.errors.channel?<div className=\"error\">{formik.errors.channel}</div>:null}\r\n\r\n            </div>\r\n            \r\n\r\n\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default YouTubeForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
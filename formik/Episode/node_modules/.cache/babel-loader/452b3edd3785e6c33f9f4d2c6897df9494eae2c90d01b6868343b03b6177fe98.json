{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rawla\\\\Desktop\\\\my studies\\\\Project Practice\\\\ReactFormik tryagaincodeevolotion\\\\formik\\\\Episode11\\\\src\\\\Components\\\\YouTubeForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: 'khushboo',\n  email: '',\n  channel: ''\n};\nconst onSubmit = values => {\n  console.log(\"Form Values\", values);\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Required'),\n  email: Yup.string().email('Invalid email format ').required('Required'),\n  channel: Yup.string().required('Required')\n});\nfunction YouTubeForm() {\n  _s();\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    // validate\n    validationSchema\n  });\n  console.log(\"values:\", formik.values);\n  console.log(\"Form erros\", formik.errors);\n  console.log(\"Form visited fields\", formik.touched);\n\n  //onBlue shows if the particular field is visited or not \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          ...formik.getFieldProps('name ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 64\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 66\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channel\",\n          children: \"Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\",\n          onChange: formik.handleChange,\n          value: formik.values.channel,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), formik.touched.channel && formik.errors.channel ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 70\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(YouTubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = YouTubeForm;\nexport default YouTubeForm;\nvar _c;\n$RefreshReg$(_c, \"YouTubeForm\");","map":{"version":3,"names":["React","useFormik","Yup","jsxDEV","_jsxDEV","initialValues","name","email","channel","onSubmit","values","console","log","validationSchema","object","string","required","YouTubeForm","_s","formik","errors","touched","children","handleSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","getFieldProps","onChange","handleChange","value","onBlur","handleBlur","_c","$RefreshReg$"],"sources":["C:/Users/rawla/Desktop/my studies/Project Practice/ReactFormik tryagaincodeevolotion/formik/Episode11/src/Components/YouTubeForm.js"],"sourcesContent":["import React from 'react'\r\nimport {useFormik} from 'formik'\r\n\r\nimport * as Yup from 'yup'\r\n\r\n\r\nconst initialValues={\r\n    name:'khushboo',\r\n    email:'',\r\n    channel:''\r\n}\r\n\r\nconst onSubmit= values=>{\r\n    console.log(\"Form Values\",values)\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string().required('Required'),\r\n    email: Yup.string().email('Invalid email format ').required('Required'),\r\n    channel: Yup.string().required('Required')\r\n\r\n})\r\n\r\nfunction YouTubeForm() {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        // validate\r\n        validationSchema\r\n    });\r\n\r\n    console.log(\"values:\", formik.values)\r\n    console.log(\"Form erros\",formik.errors)\r\n    console.log(\"Form visited fields\",formik.touched)\r\n\r\n    //onBlue shows if the particular field is visited or not \r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className='form-control'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input type=\"text\" id=\"name\" name=\"name\" {...formik.getFieldProps('name ')}/>\r\n                    {formik.touched.name && formik.errors.name?<div className=\"error\">{formik.errors.name}</div>:null}\r\n            </div>\r\n            \r\n\r\n            <div className='form-control'>\r\n                    <label htmlFor = 'email'>Email</label>\r\n                    <input type='email' name='email' id='email' onChange={formik.handleChange} value={formik.values.email} onBlur={formik.handleBlur}/>\r\n                    {formik.touched.email && formik.errors.email?<div className=\"error\">{formik.errors.email}</div>:null}\r\n\r\n            </div>\r\n            \r\n\r\n            <div className='form-control'>\r\n                    <label htmlFor='channel'>Channel</label>\r\n                    <input type=\"text\" id=\"channel\" name=\"channel\" onChange={formik.handleChange} value={formik.values.channel} onBlur={formik.handleBlur}/>\r\n                    {formik.touched.channel && formik.errors.channel?<div className=\"error\">{formik.errors.channel}</div>:null}\r\n\r\n            </div>\r\n            \r\n\r\n\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default YouTubeForm"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,QAAQ;AAEhC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,aAAa,GAAC;EAChBC,IAAI,EAAC,UAAU;EACfC,KAAK,EAAC,EAAE;EACRC,OAAO,EAAC;AACZ,CAAC;AAED,MAAMC,QAAQ,GAAEC,MAAM,IAAE;EACpBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAACF,MAAM,CAAC;AACrC,CAAC;AAED,MAAMG,gBAAgB,GAAGX,GAAG,CAACY,MAAM,CAAC;EAChCR,IAAI,EAAEJ,GAAG,CAACa,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;EACvCT,KAAK,EAAEL,GAAG,CAACa,MAAM,CAAC,CAAC,CAACR,KAAK,CAAC,uBAAuB,CAAC,CAACS,QAAQ,CAAC,UAAU,CAAC;EACvER,OAAO,EAAEN,GAAG,CAACa,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU;AAE7C,CAAC,CAAC;AAEF,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAMC,MAAM,GAAGlB,SAAS,CAAC;IACrBI,aAAa;IACbI,QAAQ;IACR;IACAI;EACJ,CAAC,CAAC;EAEFF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEO,MAAM,CAACT,MAAM,CAAC;EACrCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAACO,MAAM,CAACC,MAAM,CAAC;EACvCT,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACO,MAAM,CAACE,OAAO,CAAC;;EAEjD;;EAEF,oBACEjB,OAAA;IAAAkB,QAAA,eACIlB,OAAA;MAAMK,QAAQ,EAAEU,MAAM,CAACI,YAAa;MAAAD,QAAA,gBAChClB,OAAA;QAAKoB,SAAS,EAAC,cAAc;QAAAF,QAAA,gBACrBlB,OAAA;UAAOqB,OAAO,EAAC,MAAM;UAAAH,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClCzB,OAAA;UAAO0B,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,MAAM;UAACzB,IAAI,EAAC,MAAM;UAAA,GAAKa,MAAM,CAACa,aAAa,CAAC,OAAO;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC5EV,MAAM,CAACE,OAAO,CAACf,IAAI,IAAIa,MAAM,CAACC,MAAM,CAACd,IAAI,gBAACF,OAAA;UAAKoB,SAAS,EAAC,OAAO;UAAAF,QAAA,EAAEH,MAAM,CAACC,MAAM,CAACd;QAAI;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAAC,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpG,CAAC,eAGNzB,OAAA;QAAKoB,SAAS,EAAC,cAAc;QAAAF,QAAA,gBACrBlB,OAAA;UAAOqB,OAAO,EAAG,OAAO;UAAAH,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtCzB,OAAA;UAAO0B,IAAI,EAAC,OAAO;UAACxB,IAAI,EAAC,OAAO;UAACyB,EAAE,EAAC,OAAO;UAACE,QAAQ,EAAEd,MAAM,CAACe,YAAa;UAACC,KAAK,EAAEhB,MAAM,CAACT,MAAM,CAACH,KAAM;UAAC6B,MAAM,EAAEjB,MAAM,CAACkB;QAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EAClIV,MAAM,CAACE,OAAO,CAACd,KAAK,IAAIY,MAAM,CAACC,MAAM,CAACb,KAAK,gBAACH,OAAA;UAAKoB,SAAS,EAAC,OAAO;UAAAF,QAAA,EAAEH,MAAM,CAACC,MAAM,CAACb;QAAK;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAAC,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvG,CAAC,eAGNzB,OAAA;QAAKoB,SAAS,EAAC,cAAc;QAAAF,QAAA,gBACrBlB,OAAA;UAAOqB,OAAO,EAAC,SAAS;UAAAH,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxCzB,OAAA;UAAO0B,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,SAAS;UAACzB,IAAI,EAAC,SAAS;UAAC2B,QAAQ,EAAEd,MAAM,CAACe,YAAa;UAACC,KAAK,EAAEhB,MAAM,CAACT,MAAM,CAACF,OAAQ;UAAC4B,MAAM,EAAEjB,MAAM,CAACkB;QAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EACvIV,MAAM,CAACE,OAAO,CAACb,OAAO,IAAIW,MAAM,CAACC,MAAM,CAACZ,OAAO,gBAACJ,OAAA;UAAKoB,SAAS,EAAC,OAAO;UAAAF,QAAA,EAAEH,MAAM,CAACC,MAAM,CAACZ;QAAO;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAAC,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7G,CAAC,eAINzB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGN,CAAC;AAEV;AAACX,EAAA,CAhDQD,WAAW;EAAA,QAEDhB,SAAS;AAAA;AAAAqC,EAAA,GAFnBrB,WAAW;AAiDpB,eAAeA,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rawla\\\\Desktop\\\\my studies\\\\Project Practice\\\\ReactFormik tryagaincodeevolotion\\\\formik\\\\Episode11\\\\src\\\\Components\\\\YouTubeForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: 'khushboo',\n  email: '',\n  channel: ''\n};\nconst onSubmit = values => {\n  console.log(\"Form Values\", values);\n};\nconst validate = values => {\n  // values.name values.email values.channel\n  //errors.name errors.email errors.channel   \n  //error should be string incdicationg the error \n  //ex erros.name=\"this foeld is required\"\n  let errors = {};\n  if (!values.name) {\n    errors.name = 'Required';\n  }\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid Email Format\";\n  }\n  if (!values.channel) {\n    errors.channel = \"Required\";\n  }\n  return errors;\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Required'),\n  email: Yup.string().email('Invalid email format ').required('Required'),\n  channel: Yup.string().required('Required')\n});\nfunction YouTubeForm() {\n  _s();\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    // validate\n    validationSchema\n  });\n  console.log(\"values:\", formik.values);\n  console.log(\"Form erros\", formik.errors);\n  console.log(\"Form visited fields\", formik.touched);\n\n  //onBlue shows if the particular field is visited or not \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: formik.handleChange,\n          value: formik.values.name,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 64\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 66\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channel\",\n          children: \"Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\",\n          onChange: formik.handleChange,\n          value: formik.values.channel,\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), formik.touched.channel && formik.errors.channel ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 70\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(YouTubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = YouTubeForm;\nexport default YouTubeForm;\nvar _c;\n$RefreshReg$(_c, \"YouTubeForm\");","map":{"version":3,"names":["React","useFormik","Yup","jsxDEV","_jsxDEV","initialValues","name","email","channel","onSubmit","values","console","log","validate","errors","test","validationSchema","object","string","required","YouTubeForm","_s","formik","touched","children","handleSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","handleChange","value","onBlur","handleBlur","_c","$RefreshReg$"],"sources":["C:/Users/rawla/Desktop/my studies/Project Practice/ReactFormik tryagaincodeevolotion/formik/Episode11/src/Components/YouTubeForm.js"],"sourcesContent":["import React from 'react'\r\nimport {useFormik} from 'formik'\r\n\r\nimport * as Yup from 'yup'\r\n\r\n\r\nconst initialValues={\r\n    name:'khushboo',\r\n    email:'',\r\n    channel:''\r\n}\r\n\r\nconst onSubmit= values=>{\r\n    console.log(\"Form Values\",values)\r\n}\r\n\r\nconst validate = values => {\r\n    // values.name values.email values.channel\r\n    //errors.name errors.email errors.channel   \r\n    //error should be string incdicationg the error \r\n    //ex erros.name=\"this foeld is required\"\r\n    let errors = {};\r\n\r\n    if(!values.name){\r\n        errors.name = 'Required'\r\n    }\r\n    if(!values.email){\r\n        errors.email = \"Required\"\r\n    }else if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){\r\n\r\n        errors.email = \"Invalid Email Format\"\r\n    }\r\n    if(!values.channel){\r\n        errors.channel = \"Required\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string().required('Required'),\r\n    email: Yup.string().email('Invalid email format ').required('Required'),\r\n    channel: Yup.string().required('Required')\r\n\r\n})\r\n\r\nfunction YouTubeForm() {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        // validate\r\n        validationSchema\r\n    });\r\n\r\n    console.log(\"values:\", formik.values)\r\n    console.log(\"Form erros\",formik.errors)\r\n    console.log(\"Form visited fields\",formik.touched)\r\n\r\n    //onBlue shows if the particular field is visited or not \r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className='form-control'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input type=\"text\" id=\"name\" name=\"name\" onChange={formik.handleChange} value={formik.values.name} onBlur={formik.handleBlur}/>\r\n                    {formik.touched.name && formik.errors.name?<div className=\"error\">{formik.errors.name}</div>:null}\r\n            </div>\r\n            \r\n\r\n            <div className='form-control'>\r\n                    <label htmlFor = 'email'>Email</label>\r\n                    <input type='email' name='email' id='email' onChange={formik.handleChange} value={formik.values.email} onBlur={formik.handleBlur}/>\r\n                    {formik.touched.email && formik.errors.email?<div className=\"error\">{formik.errors.email}</div>:null}\r\n\r\n            </div>\r\n            \r\n\r\n            <div className='form-control'>\r\n                    <label htmlFor='channel'>Channel</label>\r\n                    <input type=\"text\" id=\"channel\" name=\"channel\" onChange={formik.handleChange} value={formik.values.channel} onBlur={formik.handleBlur}/>\r\n                    {formik.touched.channel && formik.errors.channel?<div className=\"error\">{formik.errors.channel}</div>:null}\r\n\r\n            </div>\r\n            \r\n\r\n\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default YouTubeForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}